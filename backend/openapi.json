{
  "openapi": "3.1.0",
  "info": {
    "title": "Task Manager - Backend - FastAPI",
    "description": "REST API for an task manager api",
    "version": "1.0.0"
  },
  "paths": {
    "/api/v1/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User Login",
        "description": "Authenticate user and return access token.",
        "operationId": "login_api_v1_auth_login_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/LoginRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/LoginResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "Register New User",
        "description": "Register a new user in the system.",
        "operationId": "register_api_v1_auth_register_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserCreate" }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/LoginResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/refresh-token": {
      "post": {
        "tags": ["Auth"],
        "summary": "Refresh Access Token",
        "description": "Refresh access token for the current user.",
        "operationId": "refresh_token_api_v1_auth_refresh_token_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/LoginResponse" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/v1/auth/me": {
      "get": {
        "tags": ["Auth"],
        "summary": "Get Current User",
        "description": "Retrieve details of the current authenticated user.",
        "operationId": "get_user_me_api_v1_auth_me_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserOut" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/v1/users/": {
      "get": {
        "tags": ["Users"],
        "summary": "Read Users",
        "description": "Retrieve a list of users with pagination, filtering, and sorting. (Admin/Super role required)",
        "operationId": "read_users_api_v1_users__get",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 10,
              "title": "Page Size"
            }
          },
          {
            "name": "full_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Full Name"
            }
          },
          {
            "name": "role",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "$ref": "#/components/schemas/RoleEnum" },
                { "type": "null" }
              ],
              "title": "Role"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "$ref": "#/components/schemas/UserSortOptions" },
                { "type": "null" }
              ],
              "title": "Sort By"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Page_UserOut_" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Users"],
        "summary": "Create User",
        "description": "Create a new user. (Admin/Super role required)",
        "operationId": "create_user_api_v1_users__post",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserCreate" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserOut" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/emails": {
      "get": {
        "tags": ["Users"],
        "summary": "Read Users Emails",
        "description": "Retrieve a list of all user emails. (Admin/Super role required)",
        "operationId": "read_users_emails_api_v1_users_emails_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "type": "string" },
                  "type": "array",
                  "title": "Response Read Users Emails Api V1 Users Emails Get"
                }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/v1/users/{user_id}": {
      "get": {
        "tags": ["Users"],
        "summary": "Read User by ID",
        "description": "Retrieve a single user by their ID. (Admin/Super role required)",
        "operationId": "read_user_api_v1_users__user_id__get",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "User Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserOut" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Users"],
        "summary": "Update User",
        "description": "Update an existing user by their ID. (Admin/Super role required)",
        "operationId": "update_user_api_v1_users__user_id__put",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "User Id" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserUpdate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserOut" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Users"],
        "summary": "Delete User (Deactivate)",
        "description": "Deactivate a user by their ID (soft delete). (Admin/Super role required)",
        "operationId": "delete_user_api_v1_users__user_id__delete",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "User Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserOut" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/health": {
      "get": {
        "tags": ["Health"],
        "summary": "Health Check",
        "description": "Check database connection status.",
        "operationId": "health_check_api_v1_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/api/v1/tasks/": {
      "post": {
        "tags": ["Tasks"],
        "summary": "Create Task",
        "description": "Create a new task.",
        "operationId": "create_task_api_v1_tasks__post",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TaskCreate" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TaskOut" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Tasks"],
        "summary": "Read Tasks",
        "description": "Retrieve a list of tasks with pagination, filtering, and sorting.",
        "operationId": "read_tasks_api_v1_tasks__get",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 10,
              "title": "Page Size"
            }
          },
          {
            "name": "priority",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "$ref": "#/components/schemas/PriorityEnum" },
                { "type": "null" }
              ],
              "title": "Priority"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Search"
            }
          },
          {
            "name": "user_email",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "User Email"
            }
          },
          {
            "name": "assigned_to_me",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Assigned To Me"
            }
          },
          {
            "name": "order_by",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/TaskOrderField",
              "default": "created_at"
            }
          },
          {
            "name": "order_direction",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OrderDirection",
              "default": "desc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Page_TaskOut_" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/tasks/statistics": {
      "get": {
        "tags": ["Tasks"],
        "summary": "Get Task Statistics",
        "description": "Get task statistics (total, completed, pending, and percentages).",
        "operationId": "get_task_statistics_api_v1_tasks_statistics_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TaskStatistics" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/v1/tasks/{task_id}": {
      "get": {
        "tags": ["Tasks"],
        "summary": "Read Task",
        "description": "Retrieve a single task by its ID.",
        "operationId": "read_task_api_v1_tasks__task_id__get",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Task Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TaskOut" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Tasks"],
        "summary": "Update Task",
        "description": "Update an existing task by its ID.",
        "operationId": "update_task_api_v1_tasks__task_id__put",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Task Id" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TaskUpdate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TaskOut" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Tasks"],
        "summary": "Delete Task",
        "description": "Delete a task by its ID.",
        "operationId": "delete_task_api_v1_tasks__task_id__delete",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Task Id" }
          }
        ],
        "responses": {
          "204": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/tasks/{task_id}/comments": {
      "post": {
        "tags": ["Tasks"],
        "summary": "Create Comment for Task",
        "description": "Add a new comment to a specific task.",
        "operationId": "create_comment_for_task_api_v1_tasks__task_id__comments_post",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Task Id" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CommentCreate" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Comment" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Tasks"],
        "summary": "Get Comments for Task",
        "description": "Retrieve all comments for a specific task.",
        "operationId": "get_comment_for_task_api_v1_tasks__task_id__comments_get",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Task Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Comment" },
                  "title": "Response Get Comment For Task Api V1 Tasks  Task Id  Comments Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/seed/": {
      "post": {
        "tags": ["Seed"],
        "summary": "Seed Data",
        "description": "Create initial data for the application (users, tasks, etc.).",
        "operationId": "seed_data_api_v1_seed__post",
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/api/v1": {
      "get": {
        "tags": ["root"],
        "summary": "Read Root",
        "operationId": "read_root_api_v1_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Comment": {
        "properties": {
          "content": { "type": "string", "title": "Content" },
          "id": { "type": "integer", "title": "Id" },
          "task_id": { "type": "integer", "title": "Task Id" },
          "owner": { "$ref": "#/components/schemas/UserOutPublic" },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": ["content", "id", "task_id", "owner", "created_at"],
        "title": "Comment"
      },
      "CommentCreate": {
        "properties": { "content": { "type": "string", "title": "Content" } },
        "type": "object",
        "required": ["content"],
        "title": "CommentCreate"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": { "$ref": "#/components/schemas/ValidationError" },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "LoginRequest": {
        "properties": {
          "email": { "type": "string", "format": "email", "title": "Email" },
          "password": { "type": "string", "title": "Password" }
        },
        "type": "object",
        "required": ["email", "password"],
        "title": "LoginRequest"
      },
      "LoginResponse": {
        "properties": {
          "access_token": { "type": "string", "title": "Access Token" },
          "token_type": {
            "type": "string",
            "title": "Token Type",
            "default": "bearer"
          },
          "user": { "$ref": "#/components/schemas/UserLogin" }
        },
        "type": "object",
        "required": ["access_token", "user"],
        "title": "LoginResponse"
      },
      "OrderDirection": {
        "type": "string",
        "enum": ["asc", "desc"],
        "title": "OrderDirection"
      },
      "Page_TaskOut_": {
        "properties": {
          "items": {
            "items": { "$ref": "#/components/schemas/TaskOut" },
            "type": "array",
            "title": "Items"
          },
          "total_items": { "type": "integer", "title": "Total Items" },
          "total_pages": { "type": "integer", "title": "Total Pages" },
          "page": { "type": "integer", "title": "Page" },
          "page_size": { "type": "integer", "title": "Page Size" }
        },
        "type": "object",
        "required": [
          "items",
          "total_items",
          "total_pages",
          "page",
          "page_size"
        ],
        "title": "Page[TaskOut]"
      },
      "Page_UserOut_": {
        "properties": {
          "items": {
            "items": { "$ref": "#/components/schemas/UserOut" },
            "type": "array",
            "title": "Items"
          },
          "total_items": { "type": "integer", "title": "Total Items" },
          "total_pages": { "type": "integer", "title": "Total Pages" },
          "page": { "type": "integer", "title": "Page" },
          "page_size": { "type": "integer", "title": "Page Size" }
        },
        "type": "object",
        "required": [
          "items",
          "total_items",
          "total_pages",
          "page",
          "page_size"
        ],
        "title": "Page[UserOut]"
      },
      "PriorityEnum": {
        "type": "string",
        "enum": ["high", "medium", "low"],
        "title": "PriorityEnum"
      },
      "RoleEnum": {
        "type": "string",
        "enum": ["ADMIN", "SUPER", "COMMON"],
        "title": "RoleEnum"
      },
      "TaskCreate": {
        "properties": {
          "title": { "type": "string", "title": "Title" },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          },
          "due_date": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Due Date"
          },
          "priority": {
            "$ref": "#/components/schemas/PriorityEnum",
            "default": "medium"
          },
          "assigned_to": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Assigned To"
          },
          "completed": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Completed",
            "default": false
          }
        },
        "type": "object",
        "required": ["title"],
        "title": "TaskCreate"
      },
      "TaskOrderField": {
        "type": "string",
        "enum": [
          "id",
          "title",
          "due_date",
          "priority",
          "created_at",
          "updated_at"
        ],
        "title": "TaskOrderField"
      },
      "TaskOut": {
        "properties": {
          "title": { "type": "string", "title": "Title" },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          },
          "due_date": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Due Date"
          },
          "priority": {
            "$ref": "#/components/schemas/PriorityEnum",
            "default": "medium"
          },
          "id": { "type": "integer", "title": "Id" },
          "created_by": { "$ref": "#/components/schemas/UserOutPublic" },
          "assigned_to": {
            "anyOf": [
              { "$ref": "#/components/schemas/UserOutPublic" },
              { "type": "null" }
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "completed": { "type": "boolean", "title": "Completed" }
        },
        "type": "object",
        "required": [
          "title",
          "id",
          "created_by",
          "created_at",
          "updated_at",
          "completed"
        ],
        "title": "TaskOut"
      },
      "TaskStatistics": {
        "properties": {
          "total_tasks": { "type": "integer", "title": "Total Tasks" },
          "completed_tasks": { "type": "integer", "title": "Completed Tasks" },
          "pending_tasks": { "type": "integer", "title": "Pending Tasks" },
          "completed_percentage": {
            "type": "number",
            "title": "Completed Percentage"
          },
          "pending_percentage": {
            "type": "number",
            "title": "Pending Percentage"
          }
        },
        "type": "object",
        "required": [
          "total_tasks",
          "completed_tasks",
          "pending_tasks",
          "completed_percentage",
          "pending_percentage"
        ],
        "title": "TaskStatistics"
      },
      "TaskUpdate": {
        "properties": {
          "title": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Title"
          },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          },
          "due_date": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Due Date"
          },
          "priority": {
            "anyOf": [
              { "$ref": "#/components/schemas/PriorityEnum" },
              { "type": "null" }
            ]
          },
          "completed": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Completed"
          },
          "assigned_to": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Assigned To"
          }
        },
        "type": "object",
        "title": "TaskUpdate"
      },
      "UserCreate": {
        "properties": {
          "email": { "type": "string", "format": "email", "title": "Email" },
          "full_name": { "type": "string", "title": "Full Name" },
          "role": { "$ref": "#/components/schemas/RoleEnum" },
          "password": { "type": "string", "minLength": 6, "title": "Password" }
        },
        "type": "object",
        "required": ["email", "full_name", "role", "password"],
        "title": "UserCreate"
      },
      "UserLogin": {
        "properties": {
          "email": { "type": "string", "format": "email", "title": "Email" },
          "full_name": { "type": "string", "title": "Full Name" },
          "role": { "$ref": "#/components/schemas/RoleEnum" },
          "id": { "type": "integer", "title": "Id" }
        },
        "type": "object",
        "required": ["email", "full_name", "role", "id"],
        "title": "UserLogin"
      },
      "UserOut": {
        "properties": {
          "email": { "type": "string", "format": "email", "title": "Email" },
          "full_name": { "type": "string", "title": "Full Name" },
          "role": { "$ref": "#/components/schemas/RoleEnum" },
          "id": { "type": "integer", "title": "Id" },
          "is_active": { "type": "boolean", "title": "Is Active" }
        },
        "type": "object",
        "required": ["email", "full_name", "role", "id", "is_active"],
        "title": "UserOut"
      },
      "UserOutPublic": {
        "properties": {
          "email": { "type": "string", "format": "email", "title": "Email" },
          "full_name": { "type": "string", "title": "Full Name" }
        },
        "type": "object",
        "required": ["email", "full_name"],
        "title": "UserOutPublic"
      },
      "UserSortOptions": {
        "type": "string",
        "enum": ["full_name_asc", "full_name_desc", "email_asc", "email_desc"],
        "title": "UserSortOptions"
      },
      "UserUpdate": {
        "properties": {
          "full_name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Full Name"
          },
          "is_active": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Is Active"
          },
          "role": {
            "anyOf": [
              { "$ref": "#/components/schemas/RoleEnum" },
              { "type": "null" }
            ]
          }
        },
        "type": "object",
        "title": "UserUpdate"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": { "anyOf": [{ "type": "string" }, { "type": "integer" }] },
            "type": "array",
            "title": "Location"
          },
          "msg": { "type": "string", "title": "Message" },
          "type": { "type": "string", "title": "Error Type" }
        },
        "type": "object",
        "required": ["loc", "msg", "type"],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "OAuth2PasswordBearer": {
        "type": "oauth2",
        "flows": { "password": { "scopes": {}, "tokenUrl": "/auth/login" } }
      }
    }
  }
}
